    {
        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {
            "adminUsername": {
                "type": "string",
                "metadata": {
                    "description": "Username for the Virtual Machine."
                }
            },
            "adminPassword": {
                "type": "securestring",
                "metadata": {
                    "description": "Password for the Virtual Machine."
                }
            },
            "dnsLabelPrefix": {
                "type": "string",
                "metadata": {
                    "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
                }
            },
            "windowsOSVersion": {
                "type": "string",
                "defaultValue": "2016-Datacenter",
                "allowedValues": [
                    "2008-R2-SP1",
                    "2012-Datacenter",
                    "2012-R2-Datacenter",
                    "2016-Nano-Server",
                    "2016-Datacenter-with-Containers",
                    "2016-Datacenter",
                    "2019-Datacenter"
                ],
                "metadata": {
                    "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
                }
            },
            "vmSize": {
                "type": "string",
                "defaultValue": "Standard_D2_v3",
                "metadata": {
                    "description": "Size of the virtual machine."
                }
            },
            "location": {
                "type": "string",
                "defaultValue": "[resourceGroup().location]",
                "metadata": {
                    "description": "Location for all resources."
                }
            }
        },
        "variables": {
            "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'sawinvm')]",
            "nicName": "myVMNic",
            "addressPrefix": "10.0.0.0/16",
            "subnetName": "Subnet",
            "subnetPrefix": "10.0.0.0/24",
            "publicIPAddressName": "myPublicIP",
            "vmName": "SimpleWinVM",
            "virtualNetworkName": "MyVNET",
            "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
            "networkSecurityGroupName": "default-NSG"
        },
        "resources": [
            {
                "type": "Microsoft.Storage/storageAccounts",
                "apiVersion": "2018-11-01",
                "name": "[variables('storageAccountName')]",
                "location": "[parameters('location')]",
                "sku": {
                    "name": "Standard_LRS"
                },
                "kind": "Storage",
                "properties": {}
            },
            {
                "type": "Microsoft.Network/publicIPAddresses",
                "apiVersion": "2018-11-01",
                "name": "[variables('publicIPAddressName')]",
                "location": "[parameters('location')]",
                "properties": {
                    "publicIPAllocationMethod": "Dynamic",
                    "dnsSettings": {
                        "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                    }
                }
            },
            {
                "comments": "Default Network Security Group for template",
                "type": "Microsoft.Network/networkSecurityGroups",
                "apiVersion": "2019-08-01",
                "name": "[variables('networkSecurityGroupName')]",
                "location": "[parameters('location')]",
                "properties": {
                    "securityRules": [
                        {
                            "name": "default-allow-3389",
                            "properties": {
                                "priority": 1000,
                                "access": "Allow",
                                "direction": "Inbound",
                                "destinationPortRange": "3389",
                                "protocol": "Tcp",
                                "sourcePortRange": "*",
                                "sourceAddressPrefix": "*",
                                "destinationAddressPrefix": "*"
                            }
                        }
                    ]
                }
            },
            {
                "type": "Microsoft.Network/virtualNetworks",
                "apiVersion": "2018-11-01",
                "name": "[variables('virtualNetworkName')]",
                "location": "[parameters('location')]",
                "dependsOn": [
                    "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                ],
                "properties": {
                    "addressSpace": {
                        "addressPrefixes": [
                            "[variables('addressPrefix')]"
                        ]
                    },
                    "subnets": [
                        {
                            "name": "[variables('subnetName')]",
                            "properties": {
                                "addressPrefix": "[variables('subnetPrefix')]",
                                "networkSecurityGroup": {
                                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "type": "Microsoft.Network/networkInterfaces",
                "apiVersion": "2018-11-01",
                "name": "[variables('nicName')]",
                "location": "[parameters('location')]",
                "dependsOn": [
                    "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                    "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
                ],
                "properties": {
                    "ipConfigurations": [
                        {
                            "name": "ipconfig1",
                            "properties": {
                                "privateIPAllocationMethod": "Dynamic",
                                "publicIPAddress": {
                                    "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                                },
                                "subnet": {
                                    "id": "[variables('subnetRef')]"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "type": "Microsoft.Compute/virtualMachines",
                "apiVersion": "2018-10-01",
                "name": "[variables('vmName')]",
                "location": "[parameters('location')]",
                "dependsOn": [
                    "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                    "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
                ],
                "properties": {
                    "hardwareProfile": {
                        "vmSize": "[parameters('vmSize')]"
                    },
                    "osProfile": {
                        "computerName": "[variables('vmName')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    },
                    "storageProfile": {
                        "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "[parameters('windowsOSVersion')]",
                            "version": "latest"
                        },
                        "osDisk": {
                            "createOption": "FromImage"
                        },
                        "dataDisks": [
                            {
                                "diskSizeGB": 1023,
                                "lun": 0,
                                "createOption": "Empty"
                            }
                        ]
                    },
                    "networkProfile": {
                        "networkInterfaces": [
                            {
                                "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                            }
                        ]
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true,
                            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                        }
                    }
                }
            }
        ],
        "outputs": {
            "hostname": {
                "type": "string",
                "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
            }
        }
    }

You can then use the following for the parameters.json file

    {
      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
          "adminUsername": {
            "value": "admin"
          },
          "adminPassword": {
            "reference": {
              "keyVault": {
              "id": "/subscriptions/baaa99b3-1d19-4c5e-90e1-39d55de5fc6e/resourceGroups/newgrp1/providers/Microsoft.KeyVault/vaults/demovault10001"
              },
              "secretName": "vmpassword"
            }
          }  }
    }

Dynamic Implementation

1. Here is the ARM template which is the main .json file

    {
      "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
          "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
              "description": "The location where the resources will be deployed."
            }
          },
          "vaultName": {
            "type": "string",
            "defaultValue":"appvault10001"
            },
            "secretName": {
            "type": "string",
            "defaultValue":"vmaccountpassword"
          },
          "vaultResourceGroupName": {
            "type": "string",
            "defaultValue":"newgrp1"
          },
          "vaultSubscription": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]",
            "metadata": {
              "description": "The name of the subscription that contains the keyvault."
            }      }
      },
      "resources": [
        {
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2018-05-01",
          "name": "dynamicSecret",
          "properties": {
            "mode": "Incremental",
            "expressionEvaluationOptions": {
              "scope": "inner"
            },
            "template": {
              "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {
                "adminLogin": {
                  "type": "string"
                },
                "adminPassword": {
                  "type": "securestring"
                },
                "location": {
                  "type": "string"
                }
              },
              "variables": {
                "sqlServerName": "[concat('sql-', uniqueString(resourceGroup().id, 'sql'))]"
              },
              "resources": [
                {
                  "type": "Microsoft.Sql/servers",
                  "apiVersion": "2018-06-01-preview",
                  "name": "[variables('sqlServerName')]",
                  "location": "[parameters('location')]",
                  "properties": {
                    "administratorLogin": "[parameters('adminLogin')]",
                    "administratorLoginPassword": "[parameters('adminPassword')]"
                  }
                }
              ],
              "outputs": {
                "sqlFQDN": {
                  "type": "string",
                  "value": "[reference(variables('sqlServerName')).fullyQualifiedDomainName]"
                }
              }
            },
            "parameters": {
              "location": {
                "value": "[parameters('location')]"
              },
              "adminLogin": {
                "value": "demousr"
              },
              "adminPassword": {
                "reference": {
                  "keyVault": {
                    "id": "[resourceId(parameters('vaultSubscription'), parameters('vaultResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]"
                  },
                  "secretName": "[parameters('secretName')]"
                }
              }
            }
          }
        }
      ],
      "outputs": {
      }
    }
